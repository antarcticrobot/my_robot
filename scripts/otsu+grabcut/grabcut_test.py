import numpy as np
import cv2
import matplotlib.pyplot as plt



# 11.36 GrabCut 图割分割算法（掩模图像）
# image = cv2.imread('/home/yr/热成像数据_存档/2023_01_03_2110_tqyb4/rainbow/1884624.jpg')  # 读取彩色图像(BGR)
image = cv2.imread('/home/yr/热成像数据_存档_排烟管/2023_02_20_1630_pyg/raw/421802.bmp')
# maskImg = cv2.imread("./mask/1884624.jpg", flags=0)  # 读取掩模图像(xupt)
maskImg = cv2.imread("./mask/421802.bmp", flags=0)  # 读取掩模图像(xupt)
maskImg=255-maskImg

# 生成掩模图像 mask，大于 0 的像素设为可能前景
mask = np.zeros(image.shape[:2], dtype="uint8")
mask[maskImg > 0] = cv2.GC_PR_FGD
mask[maskImg == 0] = cv2.GC_BGD
# print(mask.shape, maskInv.shape)
# apply GrabCut using the the mask segmentation method
fgModel = np.zeros((1, 65), dtype="float")  # 前景模型, 13*5
bgModel = np.zeros((1, 65), dtype="float")  # 背景模型, 13*5
iter = 5
(mask, bgModel, fgModel) = cv2.grabCut(image, mask, None, bgModel, fgModel, iter,
                                       mode=cv2.GC_INIT_WITH_MASK)  # 基于掩模图像初始化

# 将所有确定背景和可能背景像素设置为 0，而确定前景和可能前景像素设置为 1
maskOutput = np.where((mask == cv2.GC_BGD) | (mask == cv2.GC_PR_BGD), 0, 1)
maskGrabCut = 255 - (maskOutput * 255).astype("uint8")
imgGrabCut = cv2.bitwise_and(image, image, mask=maskGrabCut)
cv2.imwrite("./mask/grabcut/421802_raw.bmp",imgGrabCut)

plt.figure(figsize=(10, 6))
plt.subplot(131), plt.axis('off'), plt.title("Origin image")
plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))  # 显示 img(RGB)
plt.subplot(132), plt.axis('off'), plt.title("Mask image")
plt.imshow(maskImg, 'gray')  # definite background
# plt.subplot(233), plt.axis('off'), plt.title("GrabCut mask")
# plt.imshow(mask, 'gray')
# plt.subplot(234), plt.axis('off'), plt.title(
#     "Mask for definite background")
# maskBGD = (mask == cv2.GC_BGD).astype("uint8") * 255
# plt.imshow(maskBGD, 'gray')  # definite background
# plt.subplot(235), plt.axis('off'), plt.title(
#     "Mask for probable background")
# maskPBGD = (mask == cv2.GC_PR_BGD).astype("uint8") * 255
# plt.imshow(maskPBGD, 'gray')  # probable background
# # plt.subplot(235), plt.axis('off'), plt.title("GrabCut Mask")
# # plt.imshow(maskGrabCut, 'gray')  # mask generated by GrabCut
plt.subplot(133), plt.axis('off'), plt.title("Output")
plt.imshow(cv2.cvtColor(imgGrabCut, cv2.COLOR_BGR2RGB))  # GrabCut Output
plt.tight_layout()
plt.show()
